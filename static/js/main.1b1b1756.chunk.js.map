{"version":3,"sources":["const/index.js","components/menu/index.js","components/timer/index.js","context/assetsContext.js","components/card/index.js","components/cardField/index.js","components/board/index.js","components/score/index.js","components/game/index.js","components/assetsPreloader/index.js","index.js"],"names":["LEVEL_PARAMS","easy","timeout","countOfPairs","medium","hard","Menu","onClick","level","startPlay","_this","props","_this2","this","react_default","a","createElement","className","type","Component","Timer","AssetsContext","React","createContext","Card","clickHandler","_this$props","card","index","cardClickHandler","preventDefaultClick","isPlaying","frontSide","_this$props2","_this$props2$card","hidden","title","assetsContext","Consumer","assets","src","alt","PureComponent","CardField","cards","ratio","document","documentElement","clientWidth","clientHeight","map","item","components_card","key","Board","levelParams","pauseResumeGame","buttonTitle","timer","components_cardField","Score","onClickHandler","startAnotherGame","gameOver","concat","FLIP_CARD_TIME","compareRandom","b","Math","random","isHidden","Game","state","showMenu","id","timerId","changeStateOfMenu","setState","changeLevelOfGame","changeTimeout","startGame","generateCards","startTimer","clearInterval","setInterval","increment","i","push","sort","openCard","cardIndex","newCards","Object","objectSpread","countOpenedCards","indexes","forEach","closePair","indexOfOpenCards","setTimeout","hidePair","newCardsWithHiddenCards","updatedIsPlaying","every","checkPair","renewedCards","length","isGameLose","clearGameOverState","stop","_this$state","pauseTimer","_this$state2","Provider","value","menu_Menu","score","components_board","loadImage","Promise","resolve","reject","img","Image","onload","onerror","Error","AssetsPreloader","isLoading","error","preloadImages","assetUrls","all","then","catch","componentDidMount","children","ReactDOM","render","assetsPreloader","_ref","loader","size","components_game","getElementById"],"mappings":"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","file":"static/js/main.1b1b1756.chunk.js","sourcesContent":["const LEVEL_PARAMS = {\r\n\teasy: { \r\n        timeout: 180,\r\n        countOfPairs: 12,\r\n    },\r\n\tmedium: { \r\n        timeout: 120,\r\n        countOfPairs: 12,\r\n    },\r\n\thard: { \r\n        timeout: 90,\r\n        countOfPairs: 12,\r\n    },\r\n};\r\n\r\nconst CARD_IMAGES = [\r\n    \"img/1.jpg\",\r\n    \"img/2.jpg\",\r\n    \"img/3.jpg\",\r\n    \"img/4.jpg\",\r\n    \"img/5.jpg\",\r\n    \"img/6.jpg\",\r\n    \"img/7.jpg\",\r\n    \"img/8.jpg\",\r\n    \"img/9.jpg\",\r\n    \"img/10.jpg\",\r\n    \"img/11.jpg\",\r\n    \"img/12.jpg\",\r\n];\r\n\r\nexport { LEVEL_PARAMS, CARD_IMAGES };","import React, { Component } from 'react';\r\nimport { LEVEL_PARAMS } from 'const';\r\nimport './menu.scss';\r\n\r\nexport default class Menu extends Component {\r\n    onClick = (level) => {\r\n        const { startPlay } = this.props;\r\n        startPlay(level);\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n            <div className=\"menu\">\r\n                <div className=\"title\">Select the difficulty of the game</div>\r\n                <ul className=\"menu__list\">\r\n                    <li className=\"menu__item\">\r\n                        <button className=\"button\" type=\"button\" onClick={() => {this.onClick(LEVEL_PARAMS.easy)}}>Easy</button>\r\n                    </li>\r\n                    <li className=\"menu__item\">\r\n                        <button className=\"button\" type=\"button\" onClick={() => {this.onClick(LEVEL_PARAMS.medium)}}>Medium</button>\r\n                    </li>\r\n                    <li className=\"menu__item\">\r\n                        <button className=\"button\" type=\"button\" onClick={() => {this.onClick(LEVEL_PARAMS.hard)}}>Hard</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\t\t)\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass Timer extends Component {\r\n\trender() {\r\n        const { timeout } = this.props;\r\n\t\treturn (\r\n            <div className=\"timer\">\r\n                Timer: {timeout}\r\n            </div>\r\n\t\t)\r\n    }\r\n}\r\nexport default Timer;","import React from 'react';\r\n\r\nconst AssetsContext = React.createContext([]);\r\n\r\nexport default AssetsContext;\r\n","import React, { PureComponent  } from 'react';\r\nimport AssetsContext from 'context/assetsContext';\r\nimport './card.scss';\r\n\r\nclass Card extends PureComponent {\r\n    clickHandler = () => {\r\n        const { card, index, cardClickHandler, preventDefaultClick, isPlaying } = this.props;\r\n        const { frontSide } = card;\r\n        if (!frontSide && !preventDefaultClick && isPlaying){\r\n            cardClickHandler(index);\r\n        }\r\n    }\r\n\trender() {\r\n        const { isPlaying, preventDefaultClick, card: { frontSide, hidden, title } } = this.props;\r\n        let className = 'card';\r\n\r\n        if (frontSide) {\r\n            className = 'card card--flipped';\r\n        } else if (hidden) {\r\n            className = 'card card--hidden';\r\n        } else if (!frontSide && !preventDefaultClick && isPlaying) {\r\n            className = className + ' card--clickable';\r\n        };\r\n\r\n        return (\r\n            \r\n            <AssetsContext.Consumer>\r\n                {(assets) => (\r\n                    <li className={className} onClick={this.clickHandler}>\r\n                        <div className=\"card__back\"></div>\r\n                        <div className=\"card__face\">\r\n                            {<img className=\"card__image\" src={assets[title].src} alt=\"\"/>}\r\n                        </div>\r\n                    </li>\r\n                )}\r\n            </AssetsContext.Consumer>\r\n\t\t)\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { PureComponent } from 'react';\r\nimport Card from 'components/card';\r\nimport './cardField.scss';\r\n\r\nclass CardField extends PureComponent {\r\n\trender() {\r\n        const { cards, cardClickHandler, preventDefaultClick, isPlaying } = this.props;\r\n        let className = '';\r\n        const clientWidth = document.documentElement.clientWidth;\r\n        const clientHeight = document.documentElement.clientHeight;\r\n        const ratio = clientWidth / clientHeight;\r\n\r\n        if (ratio < 0.7) {\r\n            className = 'cards cards--4х6';\r\n        } else if (ratio > 1.3) {\r\n            className = 'cards cards--8х3';\r\n        } else className = 'cards'\r\n        \r\n\t\treturn (\r\n            <ul className={className}>\r\n                {cards.map((item, index) => {\r\n                    return (\r\n                        <Card\r\n                            key={index}\r\n                            index={index}\r\n                            card={item}\r\n                            isPlaying={isPlaying}\r\n                            cardClickHandler={cardClickHandler}\r\n                            preventDefaultClick={preventDefaultClick}\r\n                        />\r\n                    )\r\n                })}\r\n            </ul>\r\n\t\t)\r\n    }\r\n}\r\nexport default CardField;\r\n","import React, { Component } from 'react';\r\nimport Timer from 'components/timer';\r\nimport CardField from 'components/cardField';\r\nimport './board.scss';\r\n\r\nclass Board extends Component {\r\n\trender() {\r\n        const {\r\n            timeout,\r\n            levelParams, \r\n            cards,\r\n            cardClickHandler,\r\n            preventDefaultClick,\r\n            isPlaying,\r\n            pauseResumeGame,\r\n        } = this.props;\r\n        const buttonTitle = isPlaying ? 'Pause' : \"Resume\";\r\n        \r\n\t\treturn (\r\n            <div className=\"board\">\r\n                <div className=\"board__header\">\r\n                    <Timer \r\n                        timeout={timeout}\r\n                    />\r\n                    <button \r\n                        className=\"button\"\r\n                        type=\"button\"\r\n                        onClick={pauseResumeGame}\r\n                    >\r\n                        {buttonTitle}\r\n                    </button>\r\n                </div>\r\n                <CardField\r\n                    isPlaying={isPlaying}\r\n                    levelParams={levelParams}\r\n                    cards={cards}\r\n                    cardClickHandler={cardClickHandler}\r\n                    preventDefaultClick={preventDefaultClick}\r\n                />\r\n            </div>\r\n\t\t)\r\n    }\r\n}\r\nexport default Board;","import React, { PureComponent } from 'react';\r\n\r\nclass Score extends PureComponent {\r\n    onClickHandler = () => {\r\n        const { startAnotherGame } = this.props;\r\n        startAnotherGame();\r\n    }\r\n\r\n\trender() {\r\n        const { gameOver } = this.props;\r\n\t\treturn (\r\n            <div className=\"score\">\r\n                <div className=\"title\">\r\n                    {`You ${gameOver}!`}\r\n                </div>\r\n                <button \r\n                    className=\"button\"\r\n                    type=\"button\" \r\n                    onClick={() => { this.onClickHandler(); }}\r\n                >\r\n                    Start a new game?\r\n                </button>\r\n            </div>\r\n\t\t)\r\n    }\r\n}\r\nexport default Score;","import React, { Component } from 'react';\r\nimport Menu from 'components/menu';\r\nimport Board from 'components/board';\r\nimport Score from 'components/score';\r\nimport { LEVEL_PARAMS } from 'const';\r\nimport AssetsContext from 'context/assetsContext';\r\nimport './game.scss';\r\n\r\nconst FLIP_CARD_TIME = 300;\r\n\r\nfunction compareRandom(a, b) {\r\n    return Math.random() - 0.5;\r\n}\r\n\r\nfunction isHidden(card) {\r\n    return card.hidden === true;\r\n}\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        showMenu: true,\r\n        levelParams: LEVEL_PARAMS.easy,\r\n        timeout: null,\r\n        cards: [],\r\n        preventDefaultClick: false,\r\n        gameOver: null,\r\n        isPlaying: false,\r\n        id: null,\r\n    }\r\n\r\n    timerId = null\r\n\r\n    changeStateOfMenu = (showMenu) => {\r\n        this.setState({ showMenu });\r\n    }\r\n\r\n    changeLevelOfGame = (levelParams) => {\r\n        this.setState({ levelParams });\r\n    }\r\n\r\n    changeTimeout = (timeout) => {\r\n        this.setState({ timeout: timeout });\r\n    }\r\n\r\n    startGame = (level) => {\r\n        this.changeStateOfMenu(false);\r\n        this.changeLevelOfGame(level);\r\n        this.changeTimeout(level.timeout);\r\n        this.generateCards(level.countOfPairs);\r\n        this.startTimer();\r\n        this.setState({ \r\n            isPlaying: true,\r\n        });\r\n    }\r\n\r\n    pauseResumeGame = () => {\r\n        const { isPlaying } = this.state;\r\n\r\n        if (isPlaying) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n        else {\r\n            this.timerId = setInterval(this.increment, 1000);\r\n        }\r\n\r\n        this.setState({ \r\n            isPlaying: !isPlaying,\r\n        });\r\n    }\r\n\r\n    generateCards = (countOfPairs) => {\r\n        const cards = [];\r\n        for (let i = 0; i < countOfPairs; i++) {\r\n            const card = {\r\n                title: i,\r\n                frontSide: false,\r\n                hidden: false,\r\n                onClick: true,\r\n            }\r\n            cards.push(card);\r\n            cards.push(card);\r\n        }\r\n        cards.sort(compareRandom);\r\n        this.setState({ cards });\r\n    }\r\n\r\n    openCard = (cards, cardIndex) => {\r\n        const newCards = cards.map((item, index) => {\r\n            if (index === cardIndex) {\r\n                return { ...item, frontSide: true };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        \r\n        this.setState({\r\n            cards: newCards,\r\n        });\r\n        return newCards;\r\n    }\r\n\r\n    countOpenedCards = (cards) => {\r\n        const indexes = [];\r\n        cards.forEach((item, index) => {\r\n            if (item.frontSide === true) {\r\n                indexes.push(index);\r\n            };\r\n        })\r\n        return indexes;\r\n    }\r\n\r\n    closePair = (cards, indexOfOpenCards) => {\r\n        const { isPlaying } = this.state;\r\n        const newCards = cards.map((item, index) => {\r\n            if (index === indexOfOpenCards[0] || index === indexOfOpenCards[1]) {\r\n                return { ...item, frontSide: false };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        \r\n        const preventDefaultClick = isPlaying ? false : true;\r\n        setTimeout(()=> {\r\n            this.setState({\r\n                cards: newCards,\r\n                preventDefaultClick: preventDefaultClick,\r\n            });\r\n        }, FLIP_CARD_TIME);\r\n    }\r\n\r\n    hidePair = (cards, indexOfOpenCards) => {\r\n        const newCards = cards.map((item, index) => {\r\n            if (index === indexOfOpenCards[0] || index === indexOfOpenCards[1]) {\r\n                return { ...item, frontSide: false };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n        const newCardsWithHiddenCards = cards.map((item, index) => {\r\n            if (index === indexOfOpenCards[0] || index === indexOfOpenCards[1]) {\r\n                return { ...item, frontSide: false, hidden: true };\r\n            } else {\r\n                return item;\r\n            }\r\n        });\r\n\r\n        let gameOver = null;\r\n        let updatedIsPlaying = true;\r\n        if (newCardsWithHiddenCards.every(isHidden)) {\r\n            updatedIsPlaying = false;\r\n            gameOver = 'win';\r\n        }\r\n\r\n        setTimeout(() => { \r\n            this.setState({\r\n                cards: newCards,\r\n            });\r\n            setTimeout(() => { \r\n                this.setState({\r\n                    cards: newCardsWithHiddenCards,\r\n                    preventDefaultClick: false,\r\n                    gameOver: gameOver,\r\n                    isPlaying: updatedIsPlaying,\r\n                })\r\n            }, 0)\r\n        }, FLIP_CARD_TIME);\r\n    }\r\n\r\n    checkPair = (cards, renewedCards, indexOfOpenCards) => {\r\n        if (renewedCards[indexOfOpenCards[0]].title === renewedCards[indexOfOpenCards[1]].title) {\r\n            this.hidePair(cards, indexOfOpenCards);\r\n        } else {\r\n            this.closePair(cards, indexOfOpenCards);\r\n        }\r\n    }\r\n\r\n    cardClickHandler = (cardIndex) => {\r\n        const { cards } = this.state;\r\n        let renewedCards = [];\r\n        let indexOfOpenCards = this.countOpenedCards(cards);\r\n        if (indexOfOpenCards.length === 2) {\r\n            return false;\r\n        } else {\r\n            renewedCards = this.openCard(cards, cardIndex); \r\n            indexOfOpenCards = this.countOpenedCards(renewedCards);\r\n\r\n            if (indexOfOpenCards.length === 2) {\r\n                this.setState({\r\n                    preventDefaultClick: true,\r\n                })\r\n                this.checkPair(cards, renewedCards, indexOfOpenCards);\r\n            };\r\n\r\n        }\r\n    }\r\n    \r\n    isGameLose = () => {\r\n        this.setState({\r\n            gameOver: 'lose',\r\n        })\r\n    }\r\n    clearGameOverState = () => {\r\n        this.setState({\r\n            gameOver: null,\r\n        })\r\n    }\r\n    startAnotherGame = () => {\r\n        this.changeStateOfMenu(true);\r\n        this.clearGameOverState();\r\n    }\r\n    \r\n    stop = () => {\r\n        this.setState({ \r\n            timeout : 0,\r\n            isPlaying: false,\r\n        });\r\n\r\n        clearInterval(this.timerId);\r\n        this.timerId = null;\r\n    }\r\n\r\n    increment = () => {\r\n        let { timeout, isPlaying } = this.state;\r\n        if (timeout > 0 && isPlaying === true) {\r\n            timeout = timeout - 1;\r\n            this.changeTimeout(timeout);\r\n        } else if(isPlaying === false) {\r\n            this.pauseTimer();\r\n        } else if (timeout === 0) {\r\n            this.stop();\r\n            this.isGameLose();\r\n\t\t}\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.timerId = setInterval(this.increment, 1000);\r\n    }\r\n\r\n    pauseTimer = () => {\r\n        clearInterval(this.timerId);\r\n        this.timerId = null;\r\n    }\r\n    \r\n\trender() {\r\n        const {\r\n            levelParams, \r\n            timeout, \r\n            showMenu, \r\n            cards, \r\n            preventDefaultClick,\r\n            isPlaying, \r\n            gameOver,\r\n        } = this.state;\r\n        const { assets } = this.props;\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <AssetsContext.Provider value={assets}>\r\n                    {\r\n                        showMenu === true \r\n                            ? <Menu \r\n                                startPlay={this.startGame}\r\n                            />\r\n                            : gameOver !== null\r\n                                ? <Score \r\n                                    gameOver={gameOver}\r\n                                    startAnotherGame={this.startAnotherGame}\r\n                                />\r\n                                : <Board\r\n                                    timeout={timeout}\r\n                                    levelParams={levelParams}\r\n                                    cards={cards}\r\n                                    cardClickHandler={this.cardClickHandler}\r\n                                    preventDefaultClick={preventDefaultClick}\r\n                                    isPlaying={isPlaying}\r\n                                    pauseResumeGame={this.pauseResumeGame}\r\n                                />\r\n                    }\r\n                </AssetsContext.Provider>\r\n            </div>\r\n\t\t)\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import { Component } from 'react';\r\n\r\nconst loadImage = (src) => {\r\n    return new Promise((resolve, reject) => {\r\n        const img = new Image();\r\n        img.src = src;\r\n        img.onload = () => {\r\n            resolve(img);\r\n        };\r\n        img.onerror = () => {\r\n            reject(new Error(`Failed to load image ${src}`));\r\n        }\r\n    })\r\n}\r\n\r\nclass AssetsPreloader extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        error: null,\r\n        assets: [],\r\n    }\r\n\r\n    preloadImages = () => {\r\n        const { assetUrls } = this.props;\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        Promise.all(assetUrls.map(loadImage))\r\n            .then(assets => {\r\n                this.setState({ isLoading: false, assets });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ error });\r\n            });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.preloadImages();\r\n    }\r\n\r\n    render() {\r\n        return this.props.children({...this.state});\r\n    }\r\n}\r\n\r\n\r\nexport default AssetsPreloader;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from 'components/game';\nimport { CARD_IMAGES } from 'const';\nimport { Loader } from 'react-feather';\nimport AssetsPreloader from './components/assetsPreloader';\nimport './index.scss';\n\nReactDOM.render(\n    <AssetsPreloader assetUrls={CARD_IMAGES}>\n        {({isLoading, error, assets}) => isLoading\n            ? <Loader className=\"icon-loading\" size={30} />\n            : <Game assets={assets} />\n        }\n    </AssetsPreloader>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}